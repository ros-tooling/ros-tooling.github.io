{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["latest_packages","dashing_packages","foxy_packages","rolling_packages","Empty","sanitize","url_component","replace","RepoLink","name","href","ActionLink","config","no_latest_test","repo","split","workflow","workflow_override","src","alt","NightlyActionLink","nightly_workflow","CodecovLink","no_codecov","IssuesLink","PRsLink","DevelopmentStatusTable","Table","striped","bordered","hover","Object","entries","map","key","Ros2BuildIcon","distro","pkg","build_type","no_dev_build","short_tag","long_tag","sl","short","long","shortlong","undefined","build_url","DistroReleaseTable","packages","App","Navbar","bg","expand","Brand","Container","Row","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.11cd558e.chunk.js","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Table from 'react-bootstrap/Table';\n\nconst latest_packages = {\n  \"ros-tooling/action-amazon-chime\": {\"no_codecov\": true},\n  \"ros-tooling/action-cloudwatch-metrics\": {\"no_codecov\": true},\n  \"ros-tooling/action-pypi\": {\"no_codecov\": true},\n  \"ros-tooling/action-repository-activity\": {},\n  \"ros-tooling/action-ros-ci\": {},\n  \"ros-tooling/action-ros-ci-template\": {\"no_latest_test\": true, \"no_codecov\": true},\n  \"ros-tooling/action-ros-lint\": {},\n  \"ros-tooling/cross_compile\": {\"nightly_workflow\": \"End-to-end Testing (Nightly)\"},\n  \"ros-tooling/github-contribution-report-generator\": {},\n  \"ros-tooling/launch_ros_sandbox\": {},\n  \"ros-tooling/libstatistics_collector\": {},\n  \"ros-tooling/setup-ros\": {},\n  \"ros-tooling/setup-ros-docker\": {\"workflow_override\": \"Build Docker image\", \"no_codecov\": true},\n  \"ros-tooling/system_metrics_collector\": {},\n  \"ros2/rosbag2\": {\"no_codecov\": true},\n  \"ros2/rosbag2_bag_v2\": {\"no_codecov\": true},\n};\n\nconst dashing_packages = {\n  \"ros2bag\": {'no_dev_build': true},\n  \"rosbag2\": {},\n  \"rosbag2_converter_default_plugins\": {'no_dev_build': true},\n  \"rosbag2_storage\": {'no_dev_build': true},\n  \"rosbag2_storage_default_plugins\": {'no_dev_build': true},\n  \"rosbag2_test_common\": {'no_dev_build': true},\n  \"rosbag2_tests\": {'no_dev_build': true},\n  \"rosbag2_transport\": {'no_dev_build': true},\n  \"shared_queues_vendor\": {'no_dev_build': true},\n  \"sqlite3_vendor\": {'no_dev_build': true},\n  \"ros1_rosbag_storage_vendor\": {'no_dev_build': true},\n  \"rosbag2_bag_v2_plugins\": {'no_dev_build': true},\n};\n\nconst foxy_packages = {\n  \"ros2bag\": {\"no_dev_build\": true},\n  \"rosbag2\": {},\n  \"rosbag2_compression\": {\"no_dev_build\": true},\n  \"rosbag2_converter_default_plugins\": {\"no_dev_build\": true},\n  \"rosbag2_cpp\": {\"no_dev_build\": true},\n  \"rosbag2_storage\": {\"no_dev_build\": true},\n  \"rosbag2_storage_default_plugins\": {\"no_dev_build\": true},\n  \"rosbag2_test_common\": {\"no_dev_build\": true},\n  \"rosbag2_tests\": {\"no_dev_build\": true},\n  \"rosbag2_transport\": {\"no_dev_build\": true},\n  \"shared_queues_vendor\": {\"no_dev_build\": true},\n  \"sqlite3_vendor\": {\"no_dev_build\": true},\n  \"zstd_vendor\": {\"no_dev_build\": true},\n  \"ros1_rosbag_storage_vendor\": {\"no_dev_build\": true},\n  \"rosbag2_bag_v2_plugins\": {\"no_dev_build\": true},\n  \"libstatistics_collector\": {},\n  \"system_metrics_collector\": {},\n};\n\nconst rolling_packages = {\n  \"ros2bag\": {\"no_dev_build\": true},\n  \"rosbag2\": {},\n  \"rosbag2_compression\": {\"no_dev_build\": true},\n  \"rosbag2_converter_default_plugins\": {\"no_dev_build\": true},\n  \"rosbag2_cpp\": {\"no_dev_build\": true},\n  \"rosbag2_py\": {\"no_dev_build\": true},\n  \"rosbag2_storage\": {\"no_dev_build\": true},\n  \"rosbag2_storage_default_plugins\": {\"no_dev_build\": true},\n  \"rosbag2_test_common\": {\"no_dev_build\": true},\n  \"rosbag2_tests\": {\"no_dev_build\": true},\n  \"rosbag2_transport\": {\"no_dev_build\": true},\n  \"shared_queues_vendor\": {\"no_dev_build\": true},\n  \"sqlite3_vendor\": {\"no_dev_build\": true},\n  \"zstd_vendor\": {\"no_dev_build\": true},\n  \"ros1_rosbag_storage_vendor\": {\"no_dev_build\": true},\n  \"rosbag2_bag_v2_plugins\": {\"no_dev_build\": true},\n  \"libstatistics_collector\": {},\n};\n\nconst Empty = (\n  <p>N/A</p>\n);\n\nfunction sanitize(url_component) {\n  return url_component.replace(\" \", \"%20\");\n}\n\n\nfunction RepoLink({ name }) {\n  return (\n    <a href={`https://github.com/${name}`}>{name}</a>\n  );\n}\n\nfunction ActionLink({name, config}) {\n  if (config.no_latest_test) {\n    return Empty;\n  }\n  const repo = name.split('/')[1];\n  let workflow = `Test ${repo}`;\n  if (config.workflow_override) {\n    workflow = config.workflow_override;\n  }\n  workflow = sanitize(workflow);\n  return (\n    <a href={`https://github.com/${name}/actions`}>\n      <img src={`https://github.com/${name}/workflows/${workflow}/badge.svg`} alt=\"test status badge\" />\n    </a>\n  );\n}\n\nfunction NightlyActionLink({ name, config }) {\n  if (!config.nightly_workflow) {\n    return Empty;\n  }\n  return(\n    <a href={`https://github.com/${name}/actions`}>\n      <img src={`https://github.com/${name}/workflows/${sanitize(config.nightly_workflow)}/badge.svg`} alt=\"test status badge\" />\n    </a>\n  );\n}\n\nfunction CodecovLink({ name, config }) {\n  if (config.no_codecov) {\n    return Empty;\n  }\n  return (\n    <a href={`https://codecov.io/gh/${name}`}>\n      <img src={`https://codecov.io/gh/${name}/branch/master/graph/badge.svg`} alt=\"codecov badge\" />\n    </a>\n  );\n}\n\nfunction IssuesLink({ name }) {\n  return (\n    <a href={`https://github.com/${name}/issues`}>\n      <img src={`https://img.shields.io/github/issues/${name}`} alt=\"issue count badge\" />\n    </a>\n  );\n}\n\nfunction PRsLink({ name }) {\n  return (\n    <a href={`https://github.com/${name}/issues`}>\n      <img src={`https://img.shields.io/github/issues-pr/${name}`} alt=\"PR count badge\" />\n    </a>\n  );\n}\n\nfunction DevelopmentStatusTable() {\n  return (\n    <Table striped bordered hover>\n    <thead>\n      <tr>\n        <th>Repository</th>\n        <th>Latest</th>\n        <th>Nightly</th>\n        <th>Coverage</th>\n        <th>Issues</th>\n        <th>PRs</th>\n      </tr>\n    </thead>\n    <tbody>\n      {\n        Object.entries(latest_packages).map(([name, config]) =>\n          <tr key={name}>\n            <td><RepoLink name={name} /></td>\n            <td><ActionLink name={name} config={config} /></td>\n            <td><NightlyActionLink name={name} config={config} /></td>\n            <td><CodecovLink name={name} config={config} /></td>\n            <td><IssuesLink name={name} /></td>\n            <td><PRsLink name={name} /></td>\n          </tr>\n        )\n      }\n      </tbody>\n    </Table>\n  );\n}\n\nfunction Ros2BuildIcon({ distro, pkg, config, build_type }) {\n  if (build_type === \"dev\" && config.no_dev_build) {\n    return Empty;\n  }\n\n  // Reference logic for tags. Complex enough and requiring hidden config files, so\n  // not easy to fully replicate\n  // https://github.com/ros-infrastructure/ros_buildfarm/blob/master/ros_buildfarm/common.py\n  const sl = (short, long) => { return [ short, long ]; };\n  const tags = {\n    \"dev\": {\n      \"dashing\": sl(\"Ddev\", \"ubuntu_bionic_amd64\"),\n      \"foxy\": sl(\"Fdev\", \"ubuntu_focal_amd64\"),\n      \"rolling\": sl(\"Rdev\", \"ubuntu_focal_amd64\"),\n    },\n    \"src\": {\n      \"dashing\": sl(\"Dsrc_uB\", \"ubuntu_bionic__source\"),\n      \"foxy\": sl(\"Fsrc_uF\", \"ubuntu_focal__source\"),\n      \"rolling\": sl(\"Rsrc_uF\", \"ubuntu_focal__source\"),\n    },\n    \"x86_64\": {\n      \"dashing\": sl(\"Dbin_uB64\", \"ubuntu_bionic_amd64__binary\"),\n      \"foxy\": sl(\"Fbin_uF64\", \"ubuntu_focal_amd64__binary\"),\n      \"rolling\": sl(\"Rbin_uF64\", \"ubuntu_focal_amd64__binary\"),\n    },\n    \"aarch64\": {\n      \"dashing\": sl(\"Dbin_ubv8_uBv8\", \"ubuntu_bionic_arm64__binary\"),\n      \"foxy\": sl(\"Fbin_ubv8_uFv8\", \"ubuntu_focal_arm64__binary\"),\n      \"rolling\": sl(\"Rbin_ufv8_uFv8\", \"ubuntu_focal_arm64__binary\"),\n    },\n    \"armhf\": {\n      \"dashing\": sl(\"Dbin_ubhf_uBhf\", \"ubuntu_bionic_armhf__binary\"),\n      \"foxy\": undefined,\n      \"rolling\": undefined,\n    }\n  }\n\n  const shortlong = tags[build_type][distro];\n  let short_tag;\n  let long_tag;\n  if (shortlong === undefined) {\n    return Empty;\n  } else {\n    [short_tag, long_tag] = shortlong;\n  }\n\n  const build_url = `http://build.ros2.org/view/${short_tag}/job/${short_tag}__${pkg}__${long_tag}`;\n  return (\n    <a href={build_url}>\n      <img src={`${build_url}/badge/icon`} alt=\"build.ros2.org badge\" />\n    </a>\n  )\n}\n\nfunction DistroReleaseTable({ distro, packages }) {\n  return (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th>Package</th>\n          <th>dev</th>\n          <th>src</th>\n          <th>x86_64</th>\n          <th>aarch64</th>\n          <th>armhf</th>\n        </tr>\n      </thead>\n      <tbody>\n      {\n        Object.entries(packages).map(([name, config]) =>\n          <tr key={name}>\n            <td>{name}</td>\n            <td><Ros2BuildIcon distro={distro} pkg={name} config={config} build_type=\"dev\" /></td>\n            <td><Ros2BuildIcon distro={distro} pkg={name} config={config} build_type=\"src\" /></td>\n            <td><Ros2BuildIcon distro={distro} pkg={name} config={config} build_type=\"x86_64\" /></td>\n            <td><Ros2BuildIcon distro={distro} pkg={name} config={config} build_type=\"aarch64\" /></td>\n            <td><Ros2BuildIcon distro={distro} pkg={name} config={config} build_type=\"armhf\" /></td>\n          </tr>\n        )\n      }\n      </tbody>\n    </Table>\n  );\n}\n\nfunction App() {\n  return (\n    <div>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand>ROS 2 Tooling Working Group Dashboard</Navbar.Brand>\n      </Navbar>\n      <Container>\n        <Row>\n          <h1>Projects Development Status</h1>\n          <DevelopmentStatusTable />\n        </Row>\n        <Row>\n          <h1>Released Packages - Rolling Ridley</h1>\n          <DistroReleaseTable distro=\"rolling\" packages={rolling_packages} />\n        </Row>\n        <Row>\n          <h1> Released Packages - Foxy Fitzroy</h1>\n          <DistroReleaseTable distro=\"foxy\" packages={foxy_packages} />\n        </Row>\n        <Row>\n          <h1>Released Packages - Dashing Diademata</h1>\n          <DistroReleaseTable distro=\"dashing\" packages={dashing_packages} />\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}